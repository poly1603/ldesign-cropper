{"version":3,"file":"cropper.component.cjs","sources":["../src/cropper.component.ts"],"sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n  ViewEncapsulation\r\n} from '@angular/core'\r\nimport { Cropper as CropperCore, type CropperOptions, type CropBoxData, type ImageData } from '@ldesign/cropper-core'\r\n\r\n@Component({\r\n  selector: 'l-cropper',\r\n  standalone: true,\r\n  template: `<div #cropperContainer class=\"cropper-container\"></div>`,\r\n  styleUrls: ['./cropper.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class CropperComponent implements OnInit, OnDestroy {\r\n  @ViewChild('cropperContainer', { static: true }) containerRef!: ElementRef<HTMLDivElement>\r\n\r\n  @Input() src?: string\r\n  @Input() aspectRatio?: number\r\n  @Input() viewMode?: 0 | 1 | 2 | 3\r\n  @Input() dragMode?: 'crop' | 'move' | 'none'\r\n  @Input() options?: CropperOptions\r\n\r\n  @Output() ready = new EventEmitter<CustomEvent>()\r\n  @Output() cropstart = new EventEmitter<CustomEvent>()\r\n  @Output() cropmove = new EventEmitter<CustomEvent>()\r\n  @Output() cropend = new EventEmitter<CustomEvent>()\r\n  @Output() crop = new EventEmitter<CustomEvent>()\r\n  @Output() zoom = new EventEmitter<CustomEvent>()\r\n\r\n  private cropper?: CropperCore\r\n\r\n  ngOnInit(): void {\r\n    this.initCropper()\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.cropper?.destroy()\r\n  }\r\n\r\n  private initCropper(): void {\r\n    const options: CropperOptions = {\r\n      ...this.options,\r\n      src: this.src,\r\n      aspectRatio: this.aspectRatio,\r\n      viewMode: this.viewMode,\r\n      dragMode: this.dragMode,\r\n      ready: (e) => this.ready.emit(e),\r\n      cropstart: (e) => this.cropstart.emit(e),\r\n      cropmove: (e) => this.cropmove.emit(e),\r\n      cropend: (e) => this.cropend.emit(e),\r\n      crop: (e) => this.crop.emit(e),\r\n      zoom: (e) => this.zoom.emit(e)\r\n    }\r\n\r\n    this.cropper = new CropperCore(this.containerRef.nativeElement, options)\r\n  }\r\n\r\n  // Public API methods\r\n  getCroppedCanvas(options?: any): HTMLCanvasElement | null {\r\n    return this.cropper?.getCroppedCanvas(options) ?? null\r\n  }\r\n\r\n  getCropBoxData(): CropBoxData | null {\r\n    return this.cropper?.getCropBoxData() ?? null\r\n  }\r\n\r\n  getImageData(): ImageData | null {\r\n    return this.cropper?.getImageData() ?? null\r\n  }\r\n\r\n  setAspectRatio(aspectRatio: number): void {\r\n    this.cropper?.setAspectRatio(aspectRatio)\r\n  }\r\n\r\n  reset(): void {\r\n    this.cropper?.reset()\r\n  }\r\n\r\n  clear(): void {\r\n    this.cropper?.clear()\r\n  }\r\n\r\n  replace(url: string): void {\r\n    this.cropper?.replace(url)\r\n  }\r\n\r\n  destroy(): void {\r\n    this.cropper?.destroy()\r\n  }\r\n\r\n  zoom(ratio: number): void {\r\n    this.cropper?.zoom(ratio)\r\n  }\r\n\r\n  rotate(degree: number): void {\r\n    this.cropper?.rotate(degree)\r\n  }\r\n\r\n  scale(scaleX: number, scaleY?: number): void {\r\n    this.cropper?.scale(scaleX, scaleY)\r\n  }\r\n\r\n  move(offsetX: number, offsetY?: number): void {\r\n    this.cropper?.move(offsetX, offsetY)\r\n  }\r\n}\r\n"],"names":["CropperComponent","EventEmitter","CropperCore","__decorate","ViewChild","ElementRef","Input","Output","Component","ViewEncapsulation"],"mappings":"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"}