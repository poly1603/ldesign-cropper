{"version":3,"file":"cropper-element.js","sources":["../src/cropper-element.ts"],"sourcesContent":["import { LitElement, html, css } from 'lit'\r\nimport { customElement, property, query } from 'lit/decorators.js'\r\nimport { Cropper, type CropperOptions } from '@ldesign/cropper-core'\r\nimport type { CropBoxData, CropData } from '@ldesign/cropper-core'\r\n\r\n@customElement('l-cropper')\r\nexport class CropperElement extends LitElement {\r\n  static styles = css`\r\n    :host {\r\n      display: block;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    .cropper-container {\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  `\r\n\r\n  @property({ type: String }) src = ''\r\n  @property({ type: Number }) aspectRatio = NaN\r\n  @property({ type: Number }) viewMode = 0\r\n  @property({ type: String }) dragMode: 'crop' | 'move' | 'none' = 'crop'\r\n  @property({ type: Boolean }) responsive = true\r\n  @property({ type: Boolean }) restore = true\r\n  @property({ type: Boolean }) checkCrossOrigin = true\r\n  @property({ type: Boolean }) checkOrientation = true\r\n  @property({ type: Boolean }) modal = true\r\n  @property({ type: Boolean }) guides = true\r\n  @property({ type: Boolean }) center = true\r\n  @property({ type: Boolean }) highlight = true\r\n  @property({ type: Boolean }) background = true\r\n  @property({ type: Boolean }) autoCrop = true\r\n  @property({ type: Boolean }) movable = true\r\n  @property({ type: Boolean }) rotatable = true\r\n  @property({ type: Boolean }) scalable = true\r\n  @property({ type: Boolean }) zoomable = true\r\n  @property({ type: Boolean }) zoomOnTouch = true\r\n  @property({ type: Boolean }) zoomOnWheel = true\r\n  @property({ type: Number }) wheelZoomRatio = 0.1\r\n  @property({ type: Boolean }) cropBoxMovable = true\r\n  @property({ type: Boolean }) cropBoxResizable = true\r\n\r\n  @query('.cropper-container')\r\n  private container!: HTMLDivElement\r\n\r\n  private cropper: Cropper | null = null\r\n\r\n  protected firstUpdated() {\r\n    this.initCropper()\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    super.disconnectedCallback()\r\n    this.destroy()\r\n  }\r\n\r\n  private async initCropper() {\r\n    if (!this.container) return\r\n\r\n    const options: CropperOptions = {\r\n      src: this.src,\r\n      aspectRatio: this.aspectRatio,\r\n      viewMode: this.viewMode as any,\r\n      dragMode: this.dragMode,\r\n      responsive: this.responsive,\r\n      restore: this.restore,\r\n      checkCrossOrigin: this.checkCrossOrigin,\r\n      checkOrientation: this.checkOrientation,\r\n      modal: this.modal,\r\n      guides: this.guides,\r\n      center: this.center,\r\n      highlight: this.highlight,\r\n      background: this.background,\r\n      autoCrop: this.autoCrop,\r\n      movable: this.movable,\r\n      rotatable: this.rotatable,\r\n      scalable: this.scalable,\r\n      zoomable: this.zoomable,\r\n      zoomOnTouch: this.zoomOnTouch,\r\n      zoomOnWheel: this.zoomOnWheel,\r\n      wheelZoomRatio: this.wheelZoomRatio,\r\n      cropBoxMovable: this.cropBoxMovable,\r\n      cropBoxResizable: this.cropBoxResizable,\r\n      ready: (e) => {\r\n        this.dispatchEvent(new CustomEvent('cropper-ready', { detail: e }))\r\n      },\r\n      cropstart: (e) => {\r\n        this.dispatchEvent(new CustomEvent('cropper-cropstart', { detail: e }))\r\n      },\r\n      cropmove: (e) => {\r\n        this.dispatchEvent(new CustomEvent('cropper-cropmove', { detail: e }))\r\n      },\r\n      cropend: (e) => {\r\n        this.dispatchEvent(new CustomEvent('cropper-cropend', { detail: e }))\r\n      },\r\n      crop: (e) => {\r\n        this.dispatchEvent(new CustomEvent('cropper-crop', { detail: e }))\r\n      },\r\n      zoom: (e) => {\r\n        this.dispatchEvent(new CustomEvent('cropper-zoom', { detail: e }))\r\n      }\r\n    }\r\n\r\n    this.cropper = new Cropper(this.container, options)\r\n  }\r\n\r\n  protected updated(changedProperties: Map<string | number | symbol, unknown>) {\r\n    if (changedProperties.has('src') && this.src && this.cropper) {\r\n      this.cropper.replace(this.src)\r\n    }\r\n  }\r\n\r\n  // Public API\r\n  getCropper(): Cropper | null {\r\n    return this.cropper\r\n  }\r\n\r\n  getCropBoxData(): CropBoxData | null {\r\n    return this.cropper?.getCropBoxData() || null\r\n  }\r\n\r\n  setCropBoxData(data: Partial<CropBoxData>): void {\r\n    this.cropper?.setCropBoxData(data)\r\n  }\r\n\r\n  getData(rounded?: boolean): CropData | null {\r\n    return this.cropper?.getData(rounded) || null\r\n  }\r\n\r\n  getCroppedCanvas(options?: any): HTMLCanvasElement | null {\r\n    return this.cropper?.getCroppedCanvas(options) || null\r\n  }\r\n\r\n  async replace(src: string): Promise<void> {\r\n    await this.cropper?.replace(src)\r\n  }\r\n\r\n  reset(): void {\r\n    this.cropper?.reset()\r\n  }\r\n\r\n  clear(): void {\r\n    this.cropper?.clear()\r\n  }\r\n\r\n  rotate(degree: number): void {\r\n    this.cropper?.rotate(degree)\r\n  }\r\n\r\n  scale(scaleX: number, scaleY?: number): void {\r\n    this.cropper?.scale(scaleX, scaleY)\r\n  }\r\n\r\n  move(offsetX: number, offsetY?: number): void {\r\n    this.cropper?.move(offsetX, offsetY)\r\n  }\r\n\r\n  zoom(ratio: number): void {\r\n    this.cropper?.zoom(ratio)\r\n  }\r\n\r\n  enable(): void {\r\n    this.cropper?.enable()\r\n  }\r\n\r\n  disable(): void {\r\n    this.cropper?.disable()\r\n  }\r\n\r\n  destroy(): void {\r\n    this.cropper?.destroy()\r\n    this.cropper = null\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div class=\"cropper-container\"></div>\r\n    `\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'l-cropper': CropperElement\r\n  }\r\n}\r\n\r\n\r\n"],"names":["CropperElement"],"mappings":"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"}