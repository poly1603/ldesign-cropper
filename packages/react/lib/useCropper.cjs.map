{"version":3,"file":"useCropper.cjs","sources":["../src/useCropper.ts"],"sourcesContent":["import { useRef, useEffect, useState, useCallback } from 'react'\r\nimport { Cropper, type CropperOptions } from '@ldesign/cropper-core'\r\nimport type { CropBoxData, CropData } from '@ldesign/cropper-core'\r\n\r\nexport interface UseCropperOptions extends CropperOptions {\r\n  onReady?: (cropper: Cropper) => void\r\n}\r\n\r\nexport interface UseCropperReturn {\r\n  containerRef: React.RefObject<HTMLDivElement>\r\n  cropper: Cropper | null\r\n  ready: boolean\r\n  getCropBoxData: () => CropBoxData | null\r\n  setCropBoxData: (data: Partial<CropBoxData>) => void\r\n  getData: (rounded?: boolean) => CropData | null\r\n  getCroppedCanvas: (options?: any) => HTMLCanvasElement | null\r\n  replace: (src: string) => Promise<void>\r\n  reset: () => void\r\n  clear: () => void\r\n  rotate: (degree: number) => void\r\n  scale: (scaleX: number, scaleY?: number) => void\r\n  move: (offsetX: number, offsetY?: number) => void\r\n  zoom: (ratio: number) => void\r\n  enable: () => void\r\n  disable: () => void\r\n}\r\n\r\nexport function useCropper(options: UseCropperOptions = {}): UseCropperReturn {\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const [cropper, setCropper] = useState<Cropper | null>(null)\r\n  const [ready, setReady] = useState(false)\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) return\r\n\r\n    const { onReady, ...cropperOptions } = options\r\n\r\n    const instance = new Cropper(containerRef.current, {\r\n      ...cropperOptions,\r\n      ready: (e) => {\r\n        setReady(true)\r\n        onReady?.(instance)\r\n        if (cropperOptions.ready) {\r\n          cropperOptions.ready(e)\r\n        }\r\n      }\r\n    })\r\n\r\n    setCropper(instance)\r\n\r\n    return () => {\r\n      instance.destroy()\r\n      setCropper(null)\r\n      setReady(false)\r\n    }\r\n  }, [])\r\n\r\n  const getCropBoxData = useCallback(() => {\r\n    return cropper?.getCropBoxData() || null\r\n  }, [cropper])\r\n\r\n  const setCropBoxData = useCallback((data: Partial<CropBoxData>) => {\r\n    cropper?.setCropBoxData(data)\r\n  }, [cropper])\r\n\r\n  const getData = useCallback((rounded?: boolean) => {\r\n    return cropper?.getData(rounded) || null\r\n  }, [cropper])\r\n\r\n  const getCroppedCanvas = useCallback((options?: any) => {\r\n    return cropper?.getCroppedCanvas(options) || null\r\n  }, [cropper])\r\n\r\n  const replace = useCallback(async (src: string) => {\r\n    await cropper?.replace(src)\r\n  }, [cropper])\r\n\r\n  const reset = useCallback(() => {\r\n    cropper?.reset()\r\n  }, [cropper])\r\n\r\n  const clear = useCallback(() => {\r\n    cropper?.clear()\r\n  }, [cropper])\r\n\r\n  const rotate = useCallback((degree: number) => {\r\n    cropper?.rotate(degree)\r\n  }, [cropper])\r\n\r\n  const scale = useCallback((scaleX: number, scaleY?: number) => {\r\n    cropper?.scale(scaleX, scaleY)\r\n  }, [cropper])\r\n\r\n  const move = useCallback((offsetX: number, offsetY?: number) => {\r\n    cropper?.move(offsetX, offsetY)\r\n  }, [cropper])\r\n\r\n  const zoom = useCallback((ratio: number) => {\r\n    cropper?.zoom(ratio)\r\n  }, [cropper])\r\n\r\n  const enable = useCallback(() => {\r\n    cropper?.enable()\r\n  }, [cropper])\r\n\r\n  const disable = useCallback(() => {\r\n    cropper?.disable()\r\n  }, [cropper])\r\n\r\n  return {\r\n    containerRef,\r\n    cropper,\r\n    ready,\r\n    getCropBoxData,\r\n    setCropBoxData,\r\n    getData,\r\n    getCroppedCanvas,\r\n    replace,\r\n    reset,\r\n    clear,\r\n    rotate,\r\n    scale,\r\n    move,\r\n    zoom,\r\n    enable,\r\n    disable\r\n  }\r\n}\r\n"],"names":["useRef","useState","useEffect","Cropper","useCallback","options"],"mappings":";;;;;;;;;;;;;;AA2BM,SAAU,UAAA,CAAW,OAAA,GAA6B,EAAA,EAAE;AACxD,EAAA,MAAM,YAAA,GAAeA,aAAuB,IAAI,CAAA;AAChD,EAAA,MAAM,CAAC,OAAA,EAAS,UAAU,CAAA,GAAIC,eAAyB,IAAI,CAAA;AAC3D,EAAA,MAAM,CAAC,KAAA,EAAO,QAAQ,CAAA,GAAIA,eAAS,KAAK,CAAA;AAExC,EAAAC,eAAA,CAAU,MAAK;AACb,IAAA,IAAI,CAAC,YAAA,CAAa,OAAA;AAAS,MAAA;AAE3B,IAAA,MAAM,EAAE,OAAA,EAAS,GAAG,cAAA,EAAc,GAAK,OAAA;AAEvC,IAAA,MAAM,QAAA,GAAW,IAAIC,mBAAA,CAAQ,YAAA,CAAa,OAAA,EAAS;AAAA,MACjD,GAAG,cAAA;AAAA,MACH,KAAA,EAAO,CAAC,CAAA,KAAK;AACX,QAAA,QAAA,CAAS,IAAI,CAAA;AACb,QAAA,OAAA,GAAU,QAAQ,CAAA;AAClB,QAAA,IAAI,eAAe,KAAA,EAAO;AACxB,UAAA,cAAA,CAAe,MAAM,CAAC,CAAA;AAAA,QACxB;AAAA,MACF;AAAA,KACD,CAAA;AAED,IAAA,UAAA,CAAW,QAAQ,CAAA;AAEnB,IAAA,OAAO,MAAK;AACV,MAAA,QAAA,CAAS,OAAA,EAAO;AAChB,MAAA,UAAA,CAAW,IAAI,CAAA;AACf,MAAA,QAAA,CAAS,KAAK,CAAA;AAAA,IAChB,CAAA;AAAA,EACF,CAAA,EAAG,EAAE,CAAA;AAEL,EAAA,MAAM,cAAA,GAAiBC,kBAAY,MAAK;AACtC,IAAA,OAAO,OAAA,EAAS,gBAAc,IAAM,IAAA;AAAA,EACtC,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,cAAA,GAAiBA,iBAAA,CAAY,CAAC,IAAA,KAA8B;AAChE,IAAA,OAAA,EAAS,eAAe,IAAI,CAAA;AAAA,EAC9B,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,OAAA,GAAUA,iBAAA,CAAY,CAAC,OAAA,KAAqB;AAChD,IAAA,OAAO,OAAA,EAAS,OAAA,CAAQ,OAAO,CAAA,IAAK,IAAA;AAAA,EACtC,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,gBAAA,GAAmBA,iBAAA,CAAY,CAACC,QAAAA,KAAiB;AACrD,IAAA,OAAO,OAAA,EAAS,gBAAA,CAAiBA,QAAO,CAAA,IAAK,IAAA;AAAA,EAC/C,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,OAAA,GAAUD,iBAAA,CAAY,OAAO,GAAA,KAAe;AAChD,IAAA,MAAM,OAAA,EAAS,QAAQ,GAAG,CAAA;AAAA,EAC5B,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,KAAA,GAAQA,kBAAY,MAAK;AAC7B,IAAA,OAAA,EAAS,KAAA,EAAK;AAAA,EAChB,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,KAAA,GAAQA,kBAAY,MAAK;AAC7B,IAAA,OAAA,EAAS,KAAA,EAAK;AAAA,EAChB,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,MAAA,GAASA,iBAAA,CAAY,CAAC,MAAA,KAAkB;AAC5C,IAAA,OAAA,EAAS,OAAO,MAAM,CAAA;AAAA,EACxB,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,KAAA,GAAQA,iBAAA,CAAY,CAAC,MAAA,EAAgB,MAAA,KAAmB;AAC5D,IAAA,OAAA,EAAS,KAAA,CAAM,QAAQ,MAAM,CAAA;AAAA,EAC/B,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,IAAA,GAAOA,iBAAA,CAAY,CAAC,OAAA,EAAiB,OAAA,KAAoB;AAC7D,IAAA,OAAA,EAAS,IAAA,CAAK,SAAS,OAAO,CAAA;AAAA,EAChC,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,IAAA,GAAOA,iBAAA,CAAY,CAAC,KAAA,KAAiB;AACzC,IAAA,OAAA,EAAS,KAAK,KAAK,CAAA;AAAA,EACrB,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,MAAA,GAASA,kBAAY,MAAK;AAC9B,IAAA,OAAA,EAAS,MAAA,EAAM;AAAA,EACjB,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,MAAM,OAAA,GAAUA,kBAAY,MAAK;AAC/B,IAAA,OAAA,EAAS,OAAA,EAAO;AAAA,EAClB,CAAA,EAAG,CAAC,OAAO,CAAC,CAAA;AAEZ,EAAA,OAAO;AAAA,IACL,YAAA;AAAA,IACA,OAAA;AAAA,IACA,KAAA;AAAA,IACA,cAAA;AAAA,IACA,cAAA;AAAA,IACA,OAAA;AAAA,IACA,gBAAA;AAAA,IACA,OAAA;AAAA,IACA,KAAA;AAAA,IACA,KAAA;AAAA,IACA,MAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,IAAA;AAAA,IACA,MAAA;AAAA,IACA;AAAA;AAEJ;;;;;;;"}